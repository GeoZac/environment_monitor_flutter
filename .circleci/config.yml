version: 2.1

orbs:
  flutter: circleci/flutter@2.1.0
  codecov: codecov/codecov@5.4.1
  sonarcloud: sonarsource/sonarcloud@3.0.0

executors:
  android:
    docker:
      - image: "cimg/android:2023.12"
  base:
    docker:
      - image: "cimg/base:current"

commands:
  install-flutter:
    steps:
      - checkout
      - run:
          name: Set Flutter vesion
          command: echo 'export FLUTTER_VERSION="3.24.5"' >> $BASH_ENV
      - flutter/install_sdk_and_pub:
          version: 3.24.5
      - run: dart pub upgrade
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs

  apply_placeholder:
    steps:
      - run:
          name: Apply placeholder
          command: mv lib/config/secrets.dart.example lib/config/secrets.dart

  dart_analyze:
    steps:
      - run:
          name: Check analyze
          command: |
            flutter analyze || exit

  test-flutter:
    steps:
      - run:
          name: Run tests
          command: |
            flutter test --coverage --file-reporter json:/tmp/results/flutter.json 

  build-apk:
    description: Builds APK for Android
    steps:
      - run:
          command: flutter build apk --debug --split-per-abi
          name: Build APK

  format:
    description: Run checks if Flutter code is formatted
    steps:
      - run:
          command: >-
            dart format --set-exit-if-changed . || { echo 'Format check
            failed'; exit 1; }
          name: Analyze

jobs:
  setup-and-format:
    executor:
      name: base
    steps:
      - checkout
      - apply_placeholder
      - install-flutter
      - format
      - dart_analyze

  test-coverage:
    executor:
      name: base
    steps:
      - checkout
      - apply_placeholder
      - install-flutter
      - run:
          name: Install JUnitReport
          command: flutter pub global activate junitreport
      - run:
          name: Create directory structure for test-results
          command: mkdir --parents /tmp/results/
      - test-flutter
      - run:
          name: Convert Flutter tests to JUnit
          command: $HOME/.pub-cache/bin/tojunit --input /tmp/results/flutter.json --output /tmp/results/junit.xml
          when: always
      - store_test_results:
          path: /tmp/results
      - codecov/upload
      - sonarcloud/scan

  build-android:
    executor: android
    steps:
      - checkout
      - restore_cache:
          keys:
            - em-v1-dependencies-{{ checksum "android/app/build.gradle" }}
            - em-v1-dependencies-
      - apply_placeholder
      - install-flutter
      - build-apk
      - store_artifacts:
          path: build/app/outputs/flutter-apk
          destination: flutter-apk-artifacts
      - store_artifacts:
          path: build/app/outputs/apk/debug
          destination: apk-json-artifacts
      - save_cache:
          paths:
            - ~/.gradle
          key: em-v1-dependencies-{{ checksum "android/app/build.gradle" }}

workflows:
  main:
    jobs:
      - setup-and-format
      - build-android:
          requires:
            - setup-and-format
      - test-coverage:
          context: SonarCloudEM
          requires:
            - setup-and-format
